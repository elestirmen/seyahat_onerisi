openapi: 3.0.3
info:
  title: POI Travel Recommendation API
  description: Flask API for POI management, route creation, and travel recommendations
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:5000
    description: Development server

paths:
  # Health endpoint
  /health:
    get:
      summary: Health check endpoint
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time

  # Authentication endpoints
  /auth/login:
    get:
      summary: Get login page
      operationId: getLoginPage
      responses:
        '200':
          description: Login page HTML
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Redirect if already authenticated
    post:
      summary: User login
      operationId: userLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Invalid credentials
        '429':
          description: Rate limit exceeded

  /auth/logout:
    post:
      summary: User logout
      operationId: userLogout
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /auth/status:
    get:
      summary: Check authentication status
      operationId: getAuthStatus
      responses:
        '200':
          description: Authentication status
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                  username:
                    type: string

  /auth/csrf-token:
    get:
      summary: Get CSRF token
      operationId: getCsrfToken
      responses:
        '200':
          description: CSRF token
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string

  # POI endpoints
  /api/pois:
    get:
      summary: List POIs with filtering and pagination
      operationId: listPois
      parameters:
        - name: search
          in: query
          description: Search term for POI name/description
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: List of POIs
          content:
            application/json:
              schema:
                type: object
                properties:
                  pois:
                    type: array
                    items:
                      $ref: '#/components/schemas/POI'
                  total:
                    type: integer
                  page:
                    type: integer
                  total_pages:
                    type: integer
    post:
      summary: Create new POI
      operationId: createPoi
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POICreate'
      responses:
        '201':
          description: POI created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
        '400':
          description: Invalid input
        '401':
          description: Authentication required

  /api/poi/{poi_id}:
    get:
      summary: Get POI by ID
      operationId: getPoi
      parameters:
        - name: poi_id
          in: path
          required: true
          description: POI identifier
          schema:
            type: string
      responses:
        '200':
          description: POI details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
        '404':
          description: POI not found
    put:
      summary: Update POI
      operationId: updatePoi
      security:
        - cookieAuth: []
      parameters:
        - name: poi_id
          in: path
          required: true
          description: POI identifier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POIUpdate'
      responses:
        '200':
          description: POI updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
        '400':
          description: Invalid input
        '401':
          description: Authentication required
        '404':
          description: POI not found
    delete:
      summary: Delete POI
      operationId: deletePoi
      security:
        - cookieAuth: []
      parameters:
        - name: poi_id
          in: path
          required: true
          description: POI identifier
          schema:
            type: string
      responses:
        '200':
          description: POI deleted successfully
        '401':
          description: Authentication required
        '404':
          description: POI not found

  /api/search:
    get:
      summary: Advanced POI search
      operationId: searchPois
      parameters:
        - name: q
          in: query
          required: true
          description: Search query
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/POI'
                  total:
                    type: integer
                  query:
                    type: string

  # Route endpoints
  /api/routes:
    get:
      summary: Get predefined routes
      operationId: getPredefinedRoutes
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: List of routes
          content:
            application/json:
              schema:
                type: object
                properties:
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
                  total:
                    type: integer
                  page:
                    type: integer
                  total_pages:
                    type: integer

  /api/route/walking:
    post:
      summary: Create walking route between POIs
      operationId: createWalkingRoute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poi_ids:
                  type: array
                  items:
                    type: string
                  minItems: 2
              required:
                - poi_ids
      responses:
        '200':
          description: Walking route created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResponse'
        '400':
          description: Invalid input

  /api/route/driving:
    post:
      summary: Create driving route between POIs
      operationId: createDrivingRoute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poi_ids:
                  type: array
                  items:
                    type: string
                  minItems: 2
              required:
                - poi_ids
      responses:
        '200':
          description: Driving route created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResponse'
        '400':
          description: Invalid input

  /api/recommendations:
    post:
      summary: Get POI recommendations
      operationId: getRecommendations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                preferences:
                  type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: string
                    location:
                      type: object
                      properties:
                        lat:
                          type: number
                        lon:
                          type: number
                user_profile:
                  type: object
      responses:
        '200':
          description: Recommendations generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/POI'
                  algorithm:
                    type: string

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session

  schemas:
    POI:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        images:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - latitude
        - longitude

    POICreate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
        category:
          type: string
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
      required:
        - name
        - latitude
        - longitude

    POIUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
        category:
          type: string
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5

    Route:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        category:
          type: string
        estimated_duration:
          type: integer
          description: Duration in minutes
        difficulty:
          type: string
          enum: [easy, medium, hard]
        poi_count:
          type: integer
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    RouteResponse:
      type: object
      properties:
        route:
          type: object
          properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: double
                minItems: 2
                maxItems: 2
            distance:
              type: number
              format: float
              description: Distance in kilometers
            duration:
              type: number
              format: float
              description: Duration in minutes
            type:
              type: string
              enum: [walking, driving, smart]
        pois:
          type: array
          items:
            $ref: '#/components/schemas/POI'
        metadata:
          type: object
          properties:
            algorithm:
              type: string
            generated_at:
              type: string
              format: date-time

    Error:
      type: object
      properties:
        success:
          type: boolean
          enum: [false]
        error:
          type: string
        code:
          type: string
        details:
          type: object
      required:
        - success
        - error

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    ValidationError:
      description: Input validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
