name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install ruff black isort pytest pyyaml jsonschema || true

      - name: Validate project
        run: make validate

      - name: Quick checks (non-blocking linters if tools missing)
        run: make quick || true

      - name: Contract tests (allowed to fail until test server is added)
        run: make contract || true

name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: poi_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc curl
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff pytest
    
    - name: Set up environment
      run: |
        cp env.example .env
        echo "DB_HOST=localhost" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "DB_NAME=poi_test" >> .env
    
    - name: Run ruff linting
      run: |
        ruff check --diff .
    
    - name: Run pytest
      run: |
        pytest -q tests/ || true
    
    - name: Run smoke tests
      run: |
        python tests/smoke.py || true
      env:
        API_BASE_URL: http://localhost:5000

  lint-js:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install ESLint
      run: |
        npm install -g eslint
        npm install -g eslint-config-standard
    
    - name: Run ESLint
      run: |
        eslint static/js/*.js --max-warnings=0 || true
